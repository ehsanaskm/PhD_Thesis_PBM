/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1; // does nothing in this case, 0.1 would shrink it by 10x

vertices   // (x y z)   
(


  (-0.07  -0.2   -0.3)       //0  
   (0.07  -0.2   -0.3)       //1
   (0.07   0.2   -0.3)       //2
   (-0.07   0.2   -0.3)       //3
   (-0.07   -0.2   0.3)       //4
   (-0.07   0.2   0.3)       //5
   (0.07   0.2   0.3)       //6
   (0.07   -0.2   0.3)       //7


 /*

 (-0.4  -0.4   2.4)       //0  was 0 0 0
    (0.4   -0.4   2.4)       //1 was 0.2 0 0
    (0.4   -0.4  -0.4)       //2 was 0.2 0.2 0
    (-0.4  -0.4  -0.4)       //3 was 0 0.2 0 
    (-0.4  0.4    2.4)       //4 was 0 0 0.2
    (0.4   0.4    2.4)       //5 was 0.2 0 0.2
    (0.4   0.4   -0.4)       //6 was 0.2 0.2 0.2
    (-0.4  0.4   -0.4)       //7 was 0 0.2 0.2
*/

);

blocks          
(
    // hex (3 2 6 7 0 1 5 4) (70 200 200) simpleGrading (1 1 1)
    hex (3 2 6 5 0 1 7 4) (70 200 400) simpleGrading (1 1 1)
    //hex (0 1 2 3 4 5 6 7) (114 40 5) simpleGrading (1 1 1)
);

edges           
(
);

patches         //copied from DICAT shm example "M3_mixing elbow1"
(  
 
   patch bottom 
    (
        (0 1 2 3)
    )
    patch top
    (
        (5 6 7 4)
    )
    patch front
    (
        (0 1 7 4)
    )
    patch back
    (
        (3 2 6 5)
    )
    patch left
    (
        (0 3 5 4)
    )
    patch right
    (
        (1 2 6 7)
    )

             
 /*  patch minZ 
    (
        (3 7 6 2)
    )
    patch minX
    (
        (0 4 7 3)
    )
    patch maxX
    (
        (2 6 5 1)
    )
    patch maxZ
    (
        (1 5 4 0)
    )
    patch minY
    (
        (0 3 2 1)
    )
    patch maxY
    (
        (4 5 6 7)
    )*/



);

mergePatchPairs
(
);

// ************************************************************************* //
